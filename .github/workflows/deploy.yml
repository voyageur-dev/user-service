name: Deploy Lambda

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      environment:
        description: 'Select the environment to deploy'
        required: true
        default: 'int'
        type: choice
        options:
          - int
          - prod

jobs:
  set-environment:
    runs-on: ubuntu-latest
    outputs:
      environment: ${{ steps.set-env.outputs.environment }}
    steps:
      - name: Set environment
        id: set-env
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "environment=${{ inputs.environment }}" >> $GITHUB_OUTPUT
          else
            echo "environment=int" >> $GITHUB_OUTPUT
          fi

  deploy:
    needs: set-environment
    runs-on: ubuntu-latest
    environment: ${{ needs.set-environment.outputs.environment }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'adopt'
          cache: gradle

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Grant execute permission for gradlew
        working-directory: UserServiceFunction
        run: chmod +x gradlew

      - name: Build and Test
        working-directory: UserServiceFunction
        run: ./gradlew build test

      - name: Setup AWS SAM
        uses: aws-actions/setup-sam@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_INFRA_ADMIN_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_INFRA_ADMIN_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: SAM build
        run: sam build

      - name: SAM deploy
        run: |
          sam deploy --no-confirm-changeset \
            --stack-name user-service-${{ needs.set-environment.outputs.environment }} \
            --capabilities CAPABILITY_IAM \
            --parameter-overrides \
              UserPoolId=${{ vars.COGNITO_USER_POOL_ID }} \
            --tags \
              Environment=${{ needs.set-environment.outputs.environment }} \
              Project=user-service \
            --resolve-s3
